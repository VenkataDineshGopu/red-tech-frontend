{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gvenk\\\\Downloads\\\\red-tech-frontend\\\\src\\\\components\\\\OrderList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Checkbox, IconButton, TextField, Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { parseISO, format, isValid } from \"date-fns\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { updateOrder } from \"../services/api\";\nimport \"./OrderList.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderList = ({\n  orders,\n  onDelete,\n  onEdit,\n  selectedOrders,\n  setSelectedOrders\n}) => {\n  _s();\n  const [selectAll, setSelectAll] = useState(false);\n  const [editOrderId, setEditOrderId] = useState(null);\n  const [editOrder, setEditOrder] = useState(null);\n  useEffect(() => {\n    console.log(\"Orders updated: \", orders);\n  }, [orders]);\n  const handleSelect = orderId => {\n    console.log(`Toggling selection for order with orderId: ${orderId}`);\n    setSelectedOrders(prevSelectedOrders => {\n      const newSelectedOrders = new Set(prevSelectedOrders);\n      if (newSelectedOrders.has(orderId)) {\n        newSelectedOrders.delete(orderId);\n      } else {\n        newSelectedOrders.add(orderId);\n      }\n      console.log(`Current selected orders: ${Array.from(newSelectedOrders).join(\", \")}`);\n      return newSelectedOrders;\n    });\n  };\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedOrders(new Set());\n    } else {\n      const allOrderIds = orders.map(order => order.orderId);\n      setSelectedOrders(new Set(allOrderIds));\n    }\n    setSelectAll(!selectAll);\n  };\n  const handleEdit = order => {\n    setEditOrderId(order.orderId);\n    setEditOrder(order);\n  };\n  const handleEditChange = e => {\n    if (editOrder) {\n      const {\n        name,\n        value\n      } = e.target;\n      setEditOrder({\n        ...editOrder,\n        [name]: value\n      });\n    }\n  };\n  const handleDateChange = date => {\n    if (editOrder) {\n      setEditOrder({\n        ...editOrder,\n        createdDate: date ? date.toISOString() : \"\"\n      });\n    }\n  };\n  const handleOrderTypeChange = e => {\n    if (editOrder) {\n      setEditOrder({\n        ...editOrder,\n        orderType: e.target.value\n      });\n    }\n  };\n  const handleEditSubmit = async () => {\n    if (editOrder) {\n      try {\n        const payload = {\n          ...editOrder,\n          createdDate: editOrder.createdDate && isValid(parseISO(editOrder.createdDate)) ? editOrder.createdDate : new Date().toISOString()\n        };\n        console.log(\"Updating order with data:\", payload);\n        await updateOrder(payload);\n        setEditOrderId(null);\n        setEditOrder(null);\n        onEdit();\n      } catch (error) {\n        console.error(\"Error updating order:\", error);\n      }\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditOrderId(null);\n    setEditOrder(null);\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectAll,\n                onChange: handleSelectAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Creation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedOrders.has(order.orderId),\n                onChange: () => handleSelect(order.orderId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), editOrderId === order.orderId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  value: editOrder !== null && editOrder !== void 0 && editOrder.createdDate ? parseISO(editOrder.createdDate) : null,\n                  onChange: handleDateChange,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"createdByUserName\",\n                  value: (editOrder === null || editOrder === void 0 ? void 0 : editOrder.createdByUserName) || \"\",\n                  onChange: handleEditChange,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"order-type-label\",\n                    children: \"Order Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"order-type-label\",\n                    value: (editOrder === null || editOrder === void 0 ? void 0 : editOrder.orderType) || \"\",\n                    onChange: handleOrderTypeChange,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Standard\",\n                      children: \"Standard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"SaleOrder\",\n                      children: \"Sale Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"PurchaseOrder\",\n                      children: \"Purchase Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"TransferOrder\",\n                      children: \"Transfer Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"ReturnOrder\",\n                      children: \"Return Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"customerName\",\n                  value: (editOrder === null || editOrder === void 0 ? void 0 : editOrder.customerName) || \"\",\n                  onChange: handleEditChange,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleEditSubmit,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleCancelEdit,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdDate && isValid(parseISO(order.createdDate)) ? format(parseISO(order.createdDate), \"yyyy/MM/dd\") : \"Invalid date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdByUserName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.orderType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEdit(order),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, order.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderList, \"WL6NSn0MvzzaO6qKqJowSITR374=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","Button","Checkbox","IconButton","TextField","Select","MenuItem","FormControl","InputLabel","DatePicker","LocalizationProvider","AdapterDateFns","parseISO","format","isValid","EditIcon","updateOrder","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderList","orders","onDelete","onEdit","selectedOrders","setSelectedOrders","_s","selectAll","setSelectAll","editOrderId","setEditOrderId","editOrder","setEditOrder","console","log","handleSelect","orderId","prevSelectedOrders","newSelectedOrders","Set","has","delete","add","Array","from","join","handleSelectAll","allOrderIds","map","order","handleEdit","handleEditChange","e","name","value","target","handleDateChange","date","createdDate","toISOString","handleOrderTypeChange","orderType","handleEditSubmit","payload","Date","error","handleCancelEdit","dateAdapter","children","className","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","renderInput","params","createdByUserName","fullWidth","id","labelId","customerName","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gvenk/Downloads/red-tech-frontend/src/components/OrderList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Order } from \"../types/order\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  IconButton,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { parseISO, format, isValid } from \"date-fns\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { updateOrder } from \"../services/api\";\r\nimport \"./OrderList.css\";\r\n\r\nconst OrderList: React.FC<{\r\n  orders: Order[];\r\n  onDelete: () => void;\r\n  onEdit: () => void;\r\n  selectedOrders: Set<string>;\r\n  setSelectedOrders: React.Dispatch<React.SetStateAction<Set<string>>>;\r\n}> = ({ orders, onDelete, onEdit, selectedOrders, setSelectedOrders }) => {\r\n  const [selectAll, setSelectAll] = useState<boolean>(false);\r\n  const [editOrderId, setEditOrderId] = useState<string | null>(null);\r\n  const [editOrder, setEditOrder] = useState<Order | null>(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Orders updated: \", orders);\r\n  }, [orders]);\r\n\r\n  const handleSelect = (orderId: string) => {\r\n    console.log(`Toggling selection for order with orderId: ${orderId}`);\r\n    setSelectedOrders((prevSelectedOrders) => {\r\n      const newSelectedOrders = new Set(prevSelectedOrders);\r\n      if (newSelectedOrders.has(orderId)) {\r\n        newSelectedOrders.delete(orderId);\r\n      } else {\r\n        newSelectedOrders.add(orderId);\r\n      }\r\n      console.log(\r\n        `Current selected orders: ${Array.from(newSelectedOrders).join(\", \")}`\r\n      );\r\n      return newSelectedOrders;\r\n    });\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectAll) {\r\n      setSelectedOrders(new Set());\r\n    } else {\r\n      const allOrderIds = orders.map((order) => order.orderId);\r\n      setSelectedOrders(new Set(allOrderIds));\r\n    }\r\n    setSelectAll(!selectAll);\r\n  };\r\n\r\n  const handleEdit = (order: Order) => {\r\n    setEditOrderId(order.orderId);\r\n    setEditOrder(order);\r\n  };\r\n\r\n  const handleEditChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | { name?: string; value: unknown }>\r\n  ) => {\r\n    if (editOrder) {\r\n      const { name, value } = e.target;\r\n      setEditOrder({ ...editOrder, [name as string]: value });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    if (editOrder) {\r\n      setEditOrder({\r\n        ...editOrder,\r\n        createdDate: date ? date.toISOString() : \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOrderTypeChange = (\r\n    e: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    if (editOrder) {\r\n      setEditOrder({ ...editOrder, orderType: e.target.value as string });\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    if (editOrder) {\r\n      try {\r\n        const payload: Order = {\r\n          ...editOrder,\r\n          createdDate:\r\n            editOrder.createdDate && isValid(parseISO(editOrder.createdDate))\r\n              ? editOrder.createdDate\r\n              : new Date().toISOString(),\r\n        };\r\n        console.log(\"Updating order with data:\", payload);\r\n        await updateOrder(payload);\r\n        setEditOrderId(null);\r\n        setEditOrder(null);\r\n        onEdit();\r\n      } catch (error) {\r\n        console.error(\"Error updating order:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditOrderId(null);\r\n    setEditOrder(null);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <div className=\"order-list\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <Checkbox checked={selectAll} onChange={handleSelectAll} />\r\n              </th>\r\n              <th>Order ID</th>\r\n              <th>Creation Date</th>\r\n              <th>Created By</th>\r\n              <th>Order Type</th>\r\n              <th>Customer</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.orderId}>\r\n                <td>\r\n                  <Checkbox\r\n                    checked={selectedOrders.has(order.orderId)}\r\n                    onChange={() => handleSelect(order.orderId)}\r\n                  />\r\n                </td>\r\n                {editOrderId === order.orderId ? (\r\n                  <>\r\n                    <td>{order.orderId}</td>\r\n                    <td>\r\n                      <DatePicker\r\n                        value={\r\n                          editOrder?.createdDate\r\n                            ? parseISO(editOrder.createdDate)\r\n                            : null\r\n                        }\r\n                        onChange={handleDateChange}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <TextField\r\n                        name=\"createdByUserName\"\r\n                        value={editOrder?.createdByUserName || \"\"}\r\n                        onChange={handleEditChange}\r\n                        fullWidth\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"order-type-label\">\r\n                          Order Type\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"order-type-label\"\r\n                          value={editOrder?.orderType || \"\"}\r\n                          onChange={handleOrderTypeChange}\r\n                        >\r\n                          <MenuItem value=\"Standard\">Standard</MenuItem>\r\n                          <MenuItem value=\"SaleOrder\">Sale Order</MenuItem>\r\n                          <MenuItem value=\"PurchaseOrder\">\r\n                            Purchase Order\r\n                          </MenuItem>\r\n                          <MenuItem value=\"TransferOrder\">\r\n                            Transfer Order\r\n                          </MenuItem>\r\n                          <MenuItem value=\"ReturnOrder\">Return Order</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </td>\r\n                    <td>\r\n                      <TextField\r\n                        name=\"customerName\"\r\n                        value={editOrder?.customerName || \"\"}\r\n                        onChange={handleEditChange}\r\n                        fullWidth\r\n                      />\r\n                    </td>\r\n                    <td className=\"actions\">\r\n                      <Button onClick={handleEditSubmit}>Save</Button>\r\n                      <Button onClick={handleCancelEdit}>Cancel</Button>\r\n                    </td>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <td>{order.orderId}</td>\r\n                    <td>\r\n                      {order.createdDate && isValid(parseISO(order.createdDate))\r\n                        ? format(parseISO(order.createdDate), \"yyyy/MM/dd\")\r\n                        : \"Invalid date\"}\r\n                    </td>\r\n                    <td>{order.createdByUserName}</td>\r\n                    <td>{order.orderType}</td>\r\n                    <td>{order.customerName}</td>\r\n                    <td className=\"actions\">\r\n                      <IconButton onClick={() => handleEdit(order)}>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </td>\r\n                  </>\r\n                )}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}